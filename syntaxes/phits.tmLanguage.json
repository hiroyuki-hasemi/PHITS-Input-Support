{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "PHITS",
	"scopeName": "sample.inp",
	"patterns": [
		{
			"include": "#statments"
		}
	],
	"repository": {

		"statments":
		{
			"patterns": [
				{
					"include": "#full_line_comment"
				},
				{
					"include": "#section_off"
				},
				{
					"include": "#section"
				},
				{
					"include": "#except_cell"
				},
				{
					"include": "#mat"
				},
				{
					"include": "#transform"
				},
				{
					"include": "#infl"
				},
				{
					"include": "#set"
				},
				{
					"include": "#const"
				},
				{
					"include": "#num"
				},
				{
					"include": "#intrinsic_function"
				},
				{
					"include": "#const_pi"
				},
				{
					"include": "#inline_comment"
				}
			]
		},

		"full_line_comment": {
			"patterns": [
				{
					"name": "comment.line.double-slash",
					"match": "^[\\$\\#\\!\\%].*$|^(?i)c .*$"
				}
			]
		},

		"section": {
			"patterns": [
				{
					"name": "constant.character",
					"match": "^\\[.+\\]"
				}
			]
		},

		"section_off": {
			"patterns": [
				{
					"name": "invalid.illegal",
					"match": "^\\[.+\\](?i)(off)"
				}
			]
		},

		"num": {
			"patterns": [
				{
					"name": "constant.numeric",
					"match": "-?[0-9]+\\.?[0-9]*(?i)e?[-\\+]?[0-9]*"
				}
			]
		},

		"mat": {
			"patterns": [
				{
					"name": "string.quoted.double",
					"match": "(?i)m[0-9]+\\s+|(?i)(mt)[0-9]+\\s+|(?i)(mat)(?=\\[)"
				}
			]
		},

		"transform": {
			"patterns": [
				{
					"name": "variable.parameter",
					"match": "\\*?(?i)(tr)[0-9]+\\s+"
				}
			]
		},

		"infl": {
			"patterns": [
				{
					"name": "constant.regexp",
					"match": "(?i)(infl):"
				}
			]
		},

		"set": {
			"patterns": [
				{
					"name": "constant.character.escape",
					"match": "(?i)(set):"
				}
			]
		},

		"const": {
			"patterns": [
				{
					"name": "constant.character.escape",
					"match": "(?i)c[0-9]+"
				}
			]
		},

		"intrinsic_function": {
			"patterns": [
				{
					"name": "support.function",
					"match": "(?<!\\w)(?i)(float|int|abs|exp|log|log10|max|min|mod|nint|sign|sqrt|acos|asin|atan|atan2|cos|cosh|sin|sinh|tan|tanh)(?!\\w)"
				}
			]
		},

		"const_pi": {
			"patterns": [
				{
					"name": "constant.character.escape",
					"match": "(?<!\\w)(?i)pi(?!\\w)"
				}
			]
		},
		
		"except_cell": {
			"patterns": [
				{
					"name": "constant.numeric",
					"match": "\\#\\(?[-0-9]+"
				}
			]

		},

		"inline_comment": {
			"patterns": [
				{
					"name": "comment.line",
					"match": "[\\$\\#\\!\\%].*"
				}
			]
		},
		"inline_comment_cell": {
			"patterns": [
				{
					"name": "comment.line",
					"match": "[\\$\\!\\%].*"
				}
			]
		}
	}
}